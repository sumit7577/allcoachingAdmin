# Generated by Django 4.2.3 on 2023-07-09 15:48

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'admin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AdminBlogs',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('add_date', models.DateTimeField(blank=True, null=True)),
                ('blog_body', models.TextField(blank=True, null=True)),
                ('blog_feature_image', models.CharField(blank=True, max_length=255, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'admin_blogs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AdminConfig',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('payment_commission', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'admin_config',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AdminTestSeriesCategory',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('sort_order', models.IntegerField()),
            ],
            options={
                'db_table': 'admin_test_series_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AdminTestSeriesSubCategoryContent',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('add_date', models.DateTimeField(blank=True, null=True)),
                ('image', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('sort_order', models.IntegerField()),
                ('test_series_sub_category_id', models.BigIntegerField()),
            ],
            options={
                'db_table': 'admin_test_series_sub_category_content',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AdminTestSubCategories',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('add_date', models.DateTimeField(blank=True, null=True)),
                ('category_id', models.BigIntegerField()),
                ('image', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('sort_order', models.IntegerField()),
            ],
            options={
                'db_table': 'admin_test_sub_categories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('icon', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('sort_order', models.IntegerField()),
                ('span', models.IntegerField()),
            ],
            options={
                'db_table': 'category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContactUs',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'contact_us',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('fees', models.FloatField()),
                ('inst_id', models.BigIntegerField()),
                ('is_deleted', models.TextField()),
                ('leads', models.BigIntegerField()),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'course',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CourseBanners',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('add_date', models.DateTimeField(blank=True, null=True)),
                ('banner_image_link', models.CharField(blank=True, max_length=255, null=True)),
                ('banner_link', models.CharField(blank=True, max_length=255, null=True)),
                ('course_id', models.BigIntegerField()),
                ('place_holder', models.CharField(blank=True, max_length=255, null=True)),
                ('published', models.TextField()),
            ],
            options={
                'db_table': 'course_banners',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CourseDocument',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('course_id', models.BigIntegerField()),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('file_address', models.CharField(blank=True, max_length=255, null=True)),
                ('hidden', models.TextField()),
                ('is_demo', models.TextField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('playlist_id', models.BigIntegerField()),
                ('published', models.TextField()),
                ('time_stamp', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'course_document',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CourseGoLive',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('course_id', models.BigIntegerField()),
                ('date', models.CharField(blank=True, max_length=255, null=True)),
                ('link', models.CharField(blank=True, max_length=255, null=True)),
                ('time', models.CharField(blank=True, max_length=255, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('video_url_json', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'course_go_live',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CourseTimeTableItem',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('date', models.CharField(blank=True, max_length=255, null=True)),
                ('date_time', models.DateTimeField(blank=True, null=True)),
                ('ins_id', models.BigIntegerField()),
                ('sub_title', models.CharField(blank=True, max_length=255, null=True)),
                ('subject_id', models.BigIntegerField()),
                ('time', models.CharField(blank=True, max_length=255, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'course_time_table_item',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CourseTimeTableSubject',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('course_id', models.BigIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'course_time_table_subject',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CourseVideo',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('category', models.CharField(blank=True, max_length=255, null=True)),
                ('course_id', models.BigIntegerField()),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('demo_lenght', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('hidden', models.TextField()),
                ('is_demo', models.TextField()),
                ('is_streaming', models.TextField()),
                ('live_class_date', models.CharField(blank=True, max_length=255, null=True)),
                ('live_class_time', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('playlist_id', models.BigIntegerField()),
                ('published', models.TextField()),
                ('time_stamp', models.DateTimeField(blank=True, null=True)),
                ('video_format_json', models.TextField(blank=True, null=True)),
                ('video_location', models.TextField(blank=True, null=True)),
                ('video_thumb', models.CharField(blank=True, max_length=255, null=True)),
                ('video_type', models.CharField(blank=True, max_length=255, null=True)),
                ('views', models.BigIntegerField()),
                ('bunny_link', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'course_video',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CourseVideoComments',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('comment', models.CharField(blank=True, max_length=255, null=True)),
                ('comment_time', models.DateTimeField(blank=True, null=True)),
                ('video_id', models.BigIntegerField()),
            ],
            options={
                'db_table': 'course_video_comments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DocumentPlaylist',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('course_id', models.BigIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'document_playlist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Feed',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('category_id', models.BigIntegerField()),
                ('comment_count', models.BigIntegerField()),
                ('creation_time', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('edited', models.TextField()),
                ('feed_liker_ins', models.CharField(blank=True, max_length=255, null=True)),
                ('feed_liker_student', models.CharField(blank=True, max_length=255, null=True)),
                ('feed_type', models.IntegerField()),
                ('ins_id', models.BigIntegerField()),
                ('likes', models.IntegerField()),
                ('photo_location', models.CharField(blank=True, max_length=255, null=True)),
                ('poll_question', models.TextField(blank=True, null=True)),
                ('poll_voted_institutes', models.CharField(blank=True, max_length=255, null=True)),
                ('poll_voted_students', models.CharField(blank=True, max_length=255, null=True)),
                ('posted_by', models.IntegerField()),
                ('student_id', models.BigIntegerField()),
                ('tags', models.CharField(blank=True, max_length=255, null=True)),
                ('total_poll_votes', models.IntegerField()),
                ('voter_type', models.IntegerField()),
            ],
            options={
                'db_table': 'feed',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FeedCategory',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('icon', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('sort_order', models.IntegerField()),
            ],
            options={
                'db_table': 'feed_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FeedComments',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('comment', models.CharField(blank=True, max_length=255, null=True)),
                ('commenter', models.IntegerField()),
                ('feed_id', models.BigIntegerField()),
                ('ins_id', models.BigIntegerField()),
                ('student_id', models.BigIntegerField()),
                ('time_stamp', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'feed_comments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FeedImages',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('feed_id', models.BigIntegerField()),
                ('feed_image', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'feed_images',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FeedPollOptions',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('feed_id', models.BigIntegerField()),
                ('poll_option', models.CharField(blank=True, max_length=255, null=True)),
                ('up_votes', models.IntegerField()),
            ],
            options={
                'db_table': 'feed_poll_options',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FeedReport',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('is_seen_by_admin', models.TextField()),
                ('report_date', models.DateTimeField(blank=True, null=True)),
                ('report_update_date', models.DateTimeField(blank=True, null=True)),
                ('text', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'feed_report',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HibernateSequence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('next_val', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'hibernate_sequence',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InsLeads',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('course_id', models.BigIntegerField()),
                ('ins_id', models.BigIntegerField()),
                ('time', models.DateTimeField(blank=True, null=True)),
                ('user_id', models.BigIntegerField()),
            ],
            options={
                'db_table': 'ins_leads',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InsReview',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('course_id', models.BigIntegerField()),
                ('ins_id', models.BigIntegerField()),
                ('rating', models.IntegerField()),
                ('reply', models.CharField(blank=True, max_length=255, null=True)),
                ('review', models.CharField(blank=True, max_length=255, null=True)),
                ('student_id', models.BigIntegerField()),
                ('time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ins_review',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InsSubscription',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('ins_id', models.BigIntegerField()),
                ('is_notification_on', models.TextField()),
                ('student_id', models.BigIntegerField()),
            ],
            options={
                'db_table': 'ins_subscription',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InsTestSeries',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('category', models.BigIntegerField()),
                ('correct_marks', models.FloatField()),
                ('course_id', models.BigIntegerField()),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('hidden', models.TextField()),
                ('is_admin', models.TextField()),
                ('is_demo', models.TextField()),
                ('is_practice', models.TextField()),
                ('max_marks', models.IntegerField()),
                ('playlist_id', models.BigIntegerField()),
                ('published', models.TextField()),
                ('question_count', models.IntegerField()),
                ('time', models.TimeField(blank=True, null=True)),
                ('time_duration', models.IntegerField()),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('wrong_marks', models.FloatField()),
            ],
            options={
                'db_table': 'ins_test_series',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InsTestSeriesPlaylist',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('course_id', models.BigIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'ins_test_series_playlist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InsTestSeriesQuestions',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('correct_opt', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('explanation', models.CharField(blank=True, max_length=255, null=True)),
                ('optiona', models.CharField(blank=True, max_length=255, null=True)),
                ('optionb', models.CharField(blank=True, max_length=255, null=True)),
                ('optionc', models.CharField(blank=True, max_length=255, null=True)),
                ('optiond', models.CharField(blank=True, max_length=255, null=True)),
                ('option_type', models.IntegerField()),
                ('question', models.TextField(blank=True, null=True)),
                ('question_type', models.IntegerField()),
                ('test_series_id', models.BigIntegerField()),
            ],
            options={
                'db_table': 'ins_test_series_questions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InsTestSeriesUserQuestionResponses',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('user_response', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'ins_test_series_user_question_responses',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InsTestSeriesUserResponseBrief',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('accuracy', models.CharField(blank=True, max_length=255, null=True)),
                ('correct_ques', models.IntegerField()),
                ('percentile', models.CharField(blank=True, max_length=255, null=True)),
                ('ranks', models.BigIntegerField()),
                ('score', models.BigIntegerField()),
                ('skipped_ques', models.IntegerField()),
                ('status', models.IntegerField()),
                ('student_id', models.BigIntegerField()),
                ('test_series_id', models.BigIntegerField()),
                ('time_left', models.CharField(blank=True, max_length=255, null=True)),
                ('time_taken', models.CharField(blank=True, max_length=255, null=True)),
                ('wrong_ques', models.IntegerField()),
                ('rank', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ins_test_series_user_response_brief',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Institute',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('about', models.CharField(blank=True, max_length=255, null=True)),
                ('account_holder_name', models.CharField(blank=True, max_length=255, null=True)),
                ('account_number', models.CharField(blank=True, max_length=255, null=True)),
                ('add_date', models.DateTimeField(blank=True, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=255, null=True)),
                ('boost_value', models.IntegerField()),
                ('category', models.BigIntegerField()),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('director_name', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('expo_token', models.CharField(blank=True, max_length=255, null=True)),
                ('five_star_count', models.IntegerField()),
                ('followers_count', models.BigIntegerField()),
                ('four_star_count', models.IntegerField()),
                ('ifsc', models.CharField(blank=True, max_length=255, null=True)),
                ('ins_streaming_secret_key', models.CharField(blank=True, max_length=255, null=True)),
                ('leads', models.BigIntegerField()),
                ('logo', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('one_star_count', models.IntegerField()),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.IntegerField()),
                ('three_star_count', models.IntegerField()),
                ('total_rating', models.IntegerField()),
                ('total_rating_count', models.IntegerField()),
                ('total_revenue', models.BigIntegerField()),
                ('two_star_count', models.IntegerField()),
                ('unique_user_id', models.CharField(blank=True, max_length=255, null=True)),
                ('upi', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'institute',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MainBanners',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('banner_image_link', models.CharField(blank=True, max_length=255, null=True)),
                ('banner_link', models.CharField(blank=True, max_length=255, null=True)),
                ('modify_date', models.DateTimeField(blank=True, null=True)),
                ('place_holder', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'main_banners',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('is_seen', models.TextField()),
                ('message', models.CharField(blank=True, max_length=255, null=True)),
                ('notification_for', models.IntegerField()),
                ('notification_from', models.CharField(blank=True, max_length=255, null=True)),
                ('notification_image', models.CharField(blank=True, max_length=255, null=True)),
                ('notification_time', models.DateTimeField(blank=True, null=True)),
                ('receiver_id', models.BigIntegerField()),
                ('redirect_link', models.CharField(blank=True, max_length=255, null=True)),
                ('sender_id', models.BigIntegerField()),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'notification',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Otp',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('mobile_number', models.CharField(blank=True, max_length=255, null=True)),
                ('mobile_number_hash', models.CharField(blank=True, max_length=255, null=True)),
                ('otp_hash', models.CharField(blank=True, max_length=255, null=True)),
                ('otp_value', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'otp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Payouts',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('amount', models.FloatField()),
                ('order_id', models.CharField(blank=True, max_length=255, null=True)),
                ('payout_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'payouts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QuestionReport',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('report_date', models.DateTimeField(blank=True, null=True)),
                ('report_update_date', models.DateTimeField(blank=True, null=True)),
                ('text', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'question_report',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('blocked', models.TextField()),
                ('email', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('expo_token', models.CharField(blank=True, max_length=255, null=True)),
                ('mobile_number', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('state_of_residence', models.CharField(blank=True, max_length=255, null=True)),
                ('student_image', models.CharField(blank=True, max_length=255, null=True)),
                ('user_id', models.CharField(blank=True, max_length=255, null=True, unique=True)),
            ],
            options={
                'db_table': 'student',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StudentHistory',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('item_id', models.BigIntegerField()),
                ('student_id', models.BigIntegerField()),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'student_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StudentMessage',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('course_id', models.BigIntegerField()),
                ('for_admin', models.TextField()),
                ('is_seen_by_admin', models.TextField()),
                ('is_seen_by_ins', models.TextField()),
                ('message', models.TextField(blank=True, null=True)),
                ('message_initial_time', models.DateTimeField(blank=True, null=True)),
                ('message_type', models.CharField(blank=True, max_length=255, null=True)),
                ('message_update_time', models.DateTimeField(blank=True, null=True)),
                ('replied', models.TextField()),
                ('reply', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'student_message',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StudentMessageImages',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('image_link', models.CharField(blank=True, max_length=255, null=True)),
                ('is_reply_image', models.TextField()),
            ],
            options={
                'db_table': 'student_message_images',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StudentPinList',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'student_pin_list',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TestSeriesQuestionResponse',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('is_correct', models.TextField()),
                ('student_id', models.BigIntegerField()),
                ('test_series_id', models.BigIntegerField()),
                ('test_series_question_id', models.BigIntegerField()),
            ],
            options={
                'db_table': 'test_series_question_response',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TestSeriesResponse',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('obtained_marks', models.IntegerField()),
                ('student_id', models.BigIntegerField()),
                ('test_series_id', models.BigIntegerField()),
                ('time_stamp', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'test_series_response',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('amount', models.CharField(blank=True, max_length=255, null=True)),
                ('course_id', models.BigIntegerField()),
                ('gateway_response_msg', models.CharField(blank=True, max_length=255, null=True)),
                ('gateway_transaction_id', models.CharField(blank=True, max_length=255, null=True)),
                ('ins_id', models.BigIntegerField()),
                ('is_seen_by_admin', models.TextField()),
                ('is_seen_by_ins', models.TextField()),
                ('order_id', models.CharField(blank=True, max_length=255, null=True)),
                ('product_type', models.CharField(blank=True, max_length=255, null=True)),
                ('purchase_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('student_id', models.BigIntegerField()),
            ],
            options={
                'db_table': 'transaction',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VideoPlaylist',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('course_id', models.BigIntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'video_playlist',
                'managed': False,
            },
        ),
    ]
